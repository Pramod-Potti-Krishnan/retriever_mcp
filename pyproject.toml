[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "document-retrieval-mcp"
version = "1.0.0"
description = "MCP server for querying existing document embeddings in Supabase vector database"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Document Retrieval Team"},
]
keywords = [
    "mcp",
    "llm",
    "ai",
    "document-retrieval",
    "vector-search",
    "embeddings",
    "supabase",
    "pgvector"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp>=1.0.0",
    "asyncpg>=0.29.0",
    "openai>=1.0.0",
    "supabase>=2.0.0",
    "cachetools>=5.3.0",
    "numpy>=1.24.0",
    "python-dotenv>=1.0.0",
    "structlog>=24.1.0",
    "typing-extensions>=4.8.0",
    "aiofiles>=23.0.0",
    "jsonschema>=4.20.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0"
]

[project.scripts]
document-retrieval-mcp = "src.server:main"

[project.urls]
Homepage = "https://github.com/your-org/document-retrieval-mcp"
Repository = "https://github.com/your-org/document-retrieval-mcp"
Issues = "https://github.com/your-org/document-retrieval-mcp/issues"

[tool.hatch.build]
include = [
    "src/**/*.py",
    "README.md",
    "LICENSE",
]
exclude = [
    "tests/**",
    "docs/**",
    ".github/**",
    "*.pyc",
    "__pycache__",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html"
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C90",  # mccabe complexity
    "N",    # pep8-naming
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
strict_equality = true