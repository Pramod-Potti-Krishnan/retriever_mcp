# Fly.io Configuration for Presentation Retrieval MCP Server
# This server provides document retrieval capabilities for presentations

app = "presentation-retrieval-mcp"
primary_region = "iad"  # US East (Virginia) - closest to your Supabase region
kill_signal = "SIGTERM"
kill_timeout = "30s"

[build]
  dockerfile = "Dockerfile"

[env]
  # MCP Server Configuration
  MCP_MODE = "stdio"
  MCP_SERVER_NAME = "presentation-retrieval-mcp"
  MCP_SERVER_VERSION = "1.0.0"

  # Python Configuration
  PYTHONUNBUFFERED = "1"

  # Logging
  LOG_LEVEL = "INFO"

  # Query Defaults (can be overridden by secrets)
  MAX_RESULTS_LIMIT = "20"
  DEFAULT_SIMILARITY_THRESHOLD = "0.7"
  EMBEDDING_MODEL = "text-embedding-3-small"
  VECTOR_DIMENSIONS = "1536"

  # Connection Pool Settings
  DB_POOL_MIN_SIZE = "5"
  DB_POOL_MAX_SIZE = "20"

  # Cache Settings
  CACHE_TTL = "300"
  CACHE_MAX_SIZE = "1000"

[processes]
  # MCP server process (not a web service)
  mcp = "python src/mcp_server_flyio.py"

# MCP servers don't use HTTP, so no services section needed
# No [[services]] block

# Resource allocation for MCP server
[mounts]
  # Optional: Add persistent storage if needed for caching
  # source = "mcp_data"
  # destination = "/data"

# Machine sizing - MCP servers are lightweight
[[vm]]
  size = "shared-cpu-1x"
  memory = "512mb"

# Auto-scaling configuration
[metrics]
  # Disable HTTP metrics since this isn't a web service
  port = 9091
  path = "/metrics"

# Deploy configuration
[deploy]
  # Strategy for zero-downtime deployments
  strategy = "rolling"

# Restart policy
[restart]
  policy = "on-failure"
  retries = 3

# Health checks for monitoring (not HTTP-based)
[checks]
  # Process-based health check
  [checks.process]
    grace_period = "10s"
    interval = "30s"
    method = "process"
    timeout = "5s"